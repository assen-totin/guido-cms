# This is a sample code for nginx web server configuration file.

# GUIdo URL has the following structure: http(s)://www.domain.com/layout/section/...
# - layout is the name of current layout
# - section is the name of the current section
# - anything else is app-specific data
#
# GUIdo takes care to update the location of the browser, but there are two cases when a full URL may hit the web server:
# - when the user refreshes the page(F5 or similar), or
# - when the user clicks a link on another page, in email, in Google etc. 
#
# In both cases we need to: 
# - redirect the browser to the original GUIdo app, i.e. to index.html
# - then let the app know what the original URL was so that it may load the proper layout and section. 
#
# To achieve this we: 
# - on any URL that is missing we redirect the browser to '/'
# - we set a cookie containing the original URL (GUIdo will pick it up and will do the right stuff once loaded). 

### Note 1: If GUIdo is not installed in the document root, adjust the path in 'return' statement accordingly *and* also uncomment the 'error_page' statement (it is needed to handle the initial request). The rewritten path should point to GUIdo's index.html. Do *not* use internal redirects as we need to tell the browser there is a prefix it should use. 

### Note 2: The cookie, containing the original REQUEST_URI will be created with a 'domain' set to the current 'server_name'. Ideally this should be a two-part domain like domain.com. If you want to also use a three-part domain like www.domain.com, it's best to handle this at your load balancer and redirect your three-part domain name to your two-part domain name.


server {
	listen 80;
	server_name guido.example.com;
	root /var/www/guido;
	index index.html;

	# For dev & test environments uncomment these lines to prevent browser caching:
	#add_header Cache-control "no-cache"
	#add_header Cache-control "no-store"
	#add_header Pragma "no-cache"
	#add_header Expires 0

	location / {
		# Send missing files to separate section
		try_files $uri $uri/ @missing;
    
		# If GUIdo is not in the top-level directory and if there is no /index.html (or whatever your index file is),
		# nginx will respond with 403 (i.e. will *not* match the above rule). Here we take care of this:
		#error_page 403 @missing;
	}

	location @missing {
		# Return a cookie with the original request
		# Max-Age is the way to set a TTL in seconds for the cookie, relative to current time; 1 minutes should be enough
		# If you change the cookie name, make the same change in guido.conf.
		add_header Set-Cookie "guido_f5=$request_uri;Path=/;Max-Age=60";

		# Return 302 and redirect
		return 302 /index.html;
	}
}

   
